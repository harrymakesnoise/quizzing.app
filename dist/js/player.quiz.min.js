var canToggleRIP=!0,currentOpenRound=0,hasAlwaysAvailableRounds=!1;function setupAlwaysAvailable(){hasAlwaysAvailableRounds?($("#mc-roundkey-current").show(),$("#mc-roundkey-na").show(),$("#mc-roundkey-any").show(),$("#mc-playarea-information-alwaysavailable").show()):($("#mc-roundkey-current").removeClass("col-md-4").addClass("col-md-6").show(),$("#mc-roundkey-na").removeClass("col-md-4").addClass("col-md-6").show())}
function parseGameTimeline(a){for(var b="<hr />",c=0;c<a.rounds.length;c++){var d=a.rounds[c],f="secondary",e=" disabled";null!=d.questions&&(f="success",e="",hasAlwaysAvailableRounds=!0);b+='<button type="button" class="btn btn-block bg-gradient-'+f+'" data-roundid="'+d.roundid+'"'+e+">"+d.label+"</button>";roundData[d.roundid]=d}b+='<hr /><button type="button" class="btn btn-block bg-gradient-warning" data-roundid="help">Game Help</button>';$("#mc-roundlist").html(b).slideDown().promise().done(function(){$("#mc-roundlist").parent().parent().find(".overlay").fadeOut();
$("#mc-playarea").find(".overlay").fadeOut()});$("#mc-roundlist .btn.btn-block").on("click",function(){if($(this).prop("disabled"))return!1;toggleRoundPlay($(this).data("roundid"),$(this).hasClass("bg-gradient-success"))});setupAlwaysAvailable()}function mc_gametoggle_start_cb(a){console.log("GAMESTART")}
function mc_gametoggle_stop_cb(){$("#mc-playarea-currentround").html("").remove();$("#mc-playarea-alwaysavailable").html("").remove();$(".overlay").fadeOut();$("#mc-roundlist").html("").remove();toggleGameHelp();$("#mc-playarea-information").html("The game has now ended.<br /><br />Thanks for taking part - the final leaderboard will be released in the next few days.")}
function mc_roundtoggle_start_cb(a){console.log("ROUNDSTART");$("#mc-roundlist button[data-roundid!='help']:not([class*='bg-gradient-success'])").each(function(){parseInt($(this).data("roundid"))!=parseInt(currentRound.roundid)?$(this).removeClass("bg-gradient-info").addClass("bg-gradient-secondary").prop("disabled",!0):$(this).removeClass("bg-gradient-secondary").addClass("bg-gradient-info").prop("disabled",!1)})}
function showRoundAlert(a,b){currentOpenRound!=b&&($("#modal-round-alert-body").html("A new "+a+" has arrived on the live game."),$("#modal-round-alert").modal("show"))}
function mc_roundtoggle_stop_cb(){console.log("ROUNDEND");currentQuestion=null;$("#mc-roundlist button[data-roundid!='help']:not([class*='bg-gradient-success'])").removeClass("bg-gradient-info").addClass("bg-gradient-secondary").prop("disabled",!0);$("#mc-playarea-currentround-question").html("<i>The round has now finished.</i>")}
function mc_questiontoggle_send_cb(a){console.log("QUESTIONSTART");$("#mc-playarea-currentround-question").html(renderQuestionHTML(currentRound.roundid,a.currentdata.question,a.currentdata.question.questionIndex))}function mc_teamanswered_cb(){}
function mc_questiontoggle_clear_cb(a){console.log("QUESTIONEND");"roundjuststarted"in a.currentdata?$("#mc-playarea-currentround-question").html("The round will begin shortly."):"lastquestion"in a.currentdata?$("#mc-playarea-currentround-question").html("Round complete."):$("#mc-playarea-currentround-question").html("The next question will arrive shortly.")}
function renderQuestionHTML(a,b,c){if("undefined"===typeof b||"undefined"===typeof a)return!1;"undefined"===typeof c&&(c=1);var d=null!=b.answers,f=null!=b.questionimage,e='<div class="form-group">';""!=b.label&&(e+='<label for="'+b.questionid+'">'+c+". "+b.label+"</label>");f&&(e+='<br /><img src="/siteassets/'+b.questionimage+'"><br /><br />');if(null!=answeredQuestions[a]&&null!=answeredQuestions[a][b.questionid])e+=getAnsweredHTML(answeredQuestions[a][b.questionid]);else{if(d){e+='<div class="form-group questionBoxContainer" id="'+
a+"-"+b.questionid+'-answers">';for(c=1;c<=b.answers.length;c++)d=b.answers[c-1],c%2&&(1<c&&(e+="</div>"),e+="<div class='row m-2'>"),e+='<div class="col-6"><div class="icheck-primary d-inline"><input type="radio" id="'+a+"-"+b.questionid+"-"+c+'" name="'+a+"-"+b.questionid+'" value="'+d+'"><label for="'+a+"-"+b.questionid+"-"+c+'">'+d+"</label></div></div>";e+="</div></div>"}else e+='<div class="form-group questionBoxContainer" id="'+a+"-"+b.questionid+'-answers"><input type="text" id="'+a+"-"+b.questionid+
'" class="form-control"></div>';e+='<div class="form-group text-right" id="'+a+"-"+b.questionid+'-btn"><button class="btn btn-md btn-success" onClick="submitAnswer('+a+","+b.questionid+');">Submit Answer</button></div>'}return e+"</div>"}
function toggleGameHelp(){"none"==$("#mc-playarea-information").css("display")&&$("#mc-playarea-alwaysavailable").slideUp().promise().done(function(){$("#mc-playarea-currentround").slideUp().promise().done(function(){$("#mc-playarea-information").slideDown();canToggleRIP=!0})})}
function toggleRoundPlay(a,b){$("#modal-round-alert").modal("hide");if(!canToggleRIP||"undefined"===typeof a)return!1;"undefined"===typeof b&&(b=!1);if("help"==a)return toggleGameHelp(),!1;if(null==roundData[a]||b&&null==roundData[a].questions)return!1;canToggleRIP=!1;if(currentOpenRound==a)return $("#mc-playarea-alwaysavailable").slideUp().promise().done(function(){$("#mc-playarea-currentround").slideUp().promise().done(function(){$("#mc-playarea-information").slideDown();canToggleRIP=!0})}),currentOpenRound=
0,!1;currentOpenRound=a;var c=roundData[a],d='<div class="card-body row p-0"><div class="col-md-6 text-left"><h5>'+c.label+'</h5></div><div class="col-md-6 text-right"><small>'+c.questioncount+" questions</small></div></div>";if(null!=c.questions&&0<c.questions.length)for(var f=0;f<c.questions.length;f++)d+=renderQuestionHTML(c.roundid,c.questions[f],f+1);$("#mc-playarea-alwaysavailable").slideUp().promise().done(function(){$("#mc-playarea-currentround").slideUp().promise().done(function(){$("#mc-playarea-information").slideUp().promise().done(function(){b?
$("#mc-playarea-alwaysavailable").html(d).slideDown():($("#mc-playarea-currentround-header").html(d),$("#mc-playarea-currentround").slideDown());canToggleRIP=!0})})})}
function submitAnswer(a,b){if("undefined"===typeof a||"undefined"===typeof b)return!1;var c=$("#"+a+"-"+b),d=[];if(c.length)d.push(c.val());else{var f=[];$("#"+a+"-"+b+"-answers input").each(function(){$(this).is(":checked")&&f.push($(this).val())});d=f}if(0>=d.length)return toastr.error("Cannot submit an empty answer!"),!1;sendToServer({type:"answer-submit",callback:"submitanswer_cb",data:{questionid:b,roundid:a,answer:JSON.stringify(d)}})}
function submitanswer_cb(a){if(a.userid==userid&&null!=a.score||null!=a.message&&"Question already answered."==a.message)$("#"+a.roundid+"-"+a.questionid+"-answers").html(getAnsweredHTML(a)),$("#"+a.roundid+"-"+a.questionid+"-btn").remove()}function getAnsweredHTML(a){return'<div class="form-group questionBoxContainer">Your answer has been submitted.</div>'};